version: '3.8'

services:
  order-service:
    name: ${process.env.ORDER_SERVICE_HOST}
    build: 
      context: ./Microservices/order-service
      args:
        ORDER_SERVICE_PORT: ${process.env.ORDER_SERVICE_PORT}
    ports:
      - ${process.env.ORDER_SERVICE_PORT}:${process.env.ORDER_SERVICE_PORT}
    environment:
      - ORDER_SERVICE_PORT=${process.env.ORDER_SERVICE_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${process.env.ORDER_SERVICE_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  product-service:
    name: ${process.env.PRODUCT_SERVICE_HOST}
    build: 
      context: ./Microservices/product-service
      args:
        PRODUCT_SERVICE_PORT: ${process.env.PRODUCT_SERVICE_PORT}
    ports:
      - ${process.env.PRODUCT_SERVICE_PORT}:${process.env.PRODUCT_SERVICE_PORT}
    environment:
      - PRODUCT_SERVICE_PORT=${process.env.PRODUCT_SERVICE_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${process.env.PRODUCT_SERVICE_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  user-service:
    name: ${process.env.USER_SERVICE_HOST}
    build: 
      context: ./Microservices/user-service
      args:
        USER_SERVICE_PORT: ${process.env.USER_SERVICE_PORT}
    ports:
      - ${process.env.USER_SERVICE_PORT}:${process.env.USER_SERVICE_PORT}
    environment:
      - USER_SERVICE_PORT=${process.env.USER_SERVICE_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${process.env.USER_SERVICE_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  gateway-service:
    name: ${process.env.GATEWAY_SERVICE_HOST}
    build: 
      context: ./Microservices/gateway-service
      args:
        GATEWAY_SERVICE_PORT: ${process.env.GATEWAY_SERVICE_PORT}
    ports:
      - ${process.env.PORT}:${process.env.GATEWAY_SERVICE_PORT}
    env_file:
      - .env
    networks:
      - microservices-network
    depends_on:
      - order-service
      - product-service
      - user-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${process.env.PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge